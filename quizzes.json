{

"quiz_recursive_factorial" : {"Name":"quiz_recursive_factorial","DisplayName":"Recursive Factorial","Decription":"Recursive function definition.","QuestionHTML":"Define a recursive function, factorial(n), that computes n!.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You will need the procedure-return block in the Procedures drawer.", "Recursive definition: f(n) = 1 if n=0 otherwise f(n) = n * f(n-1)","With the current blocks, you will probably need to use a local-def-then-return block and a do-then-return block in the function return slot."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","controls_forRange","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"factorial","FunctionDef":"function factorial(n) {\n  return function(result) {\n    return function() {\n    if (n == 0) {\n    result = 1;\n  } else {\n    result = n * factorial(n - 1);\n  }\n  return result;\n  }();\n  }(0);\n}","FunctionInputs":["0","2","3","5","10"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"5\" y=\"-18\"><mutation><arg name=\"n\"></arg></mutation><title name=\"NAME\">factorial</title><value name=\"RETURN\"><block type=\"local_declaration_expression\" inline=\"false\"><mutation><localname name=\"name\"></localname></mutation><title name=\"VAR0\">result</title><value name=\"DECL0\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value><value name=\"RETURN\"><block type=\"controls_do_then_return\" inline=\"false\"><statement name=\"STM\"><block type=\"controls_if\" inline=\"false\"><mutation else=\"1\"></mutation><value name=\"IF0\"><block type=\"math_compare\" inline=\"true\"><title name=\"OP\">EQ</title><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">n</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></value><statement name=\"DO0\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">result</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></statement><statement name=\"ELSE\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">result</title><value name=\"VALUE\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">n</title></block></value><value name=\"NUM1\"><block type=\"procedures_callreturn\" inline=\"false\"><mutation name=\"factorial\"><arg name=\"n\"></arg></mutation><title name=\"PROCNAME\">factorial</title><value name=\"ARG0\"><block type=\"math_subtract\" inline=\"true\"><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">n</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></value></block></value></block></value></block></statement></block></statement><value name=\"VALUE\"><block type=\"lexical_variable_get\"><title name=\"VAR\">result</title></block></value></block></value></block></value></block></xml>"},


"quiz_simple_function": {"Name":"quiz_simple_function","DisplayName":"Simple function","Decription":"Describe the quiz problem.","QuestionHTML":"Write a function, h(x,y), that returns the sum of the numbers from x to y inclusive.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","controls_forRange","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"h","FunctionDef":"function h(x, y) {\n  return function(sum,i) {\n    return function() {\n    while (i <= y) {\n    sum = sum + i;\n    i = i + 1;\n  }\n  return sum;\n  }();\n  }(0,x);\n}","FunctionInputs":["0,0","1,10","1,20"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"165\" y=\"33\"><mutation><arg name=\"x\"></arg><arg name=\"y\"></arg></mutation><title name=\"NAME\">h</title><value name=\"RETURN\"><block type=\"local_declaration_expression\" inline=\"false\"><mutation><localname name=\"sum\"></localname><localname name=\"i\"></localname></mutation><title name=\"VAR0\">sum</title><title name=\"VAR1\">i</title><value name=\"DECL0\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value><value name=\"DECL1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"RETURN\"><block type=\"controls_do_then_return\" inline=\"false\"><statement name=\"STM\"><block type=\"controls_while\" inline=\"false\"><value name=\"TEST\"><block type=\"math_compare\" inline=\"true\"><title name=\"OP\">LTE</title><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">i</title></block></value><value name=\"B\"><block type=\"lexical_variable_get\"><title name=\"VAR\">y</title></block></value></block></value><statement name=\"DO\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">sum</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">sum</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">i</title></block></value></block></value><next><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">i</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">i</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></value></block></next></block></statement></block></statement><value name=\"VALUE\"><block type=\"lexical_variable_get\"><title name=\"VAR\">sum</title></block></value></block></value></block></value></block></xml>"},


"quiz_procedure_def" :{"Name":"quiz_procedure_def","DisplayName":"Procedure Def","Decription":"Describe the quiz problem.","QuestionHTML":"Define a procedure, setSomething(x,y) that sets global Z to the sum of its arguments.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"setSomething","FunctionDef":"undefined","FunctionInputs":["3,4",",4,5","5,6"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"52\" y=\"-3\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"52\" y=\"-3\"><title name=\"NAME\">Z</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"procedures_defnoreturn\" x=\"56\" y=\"37\"><mutation><arg name=\"x\"></arg><arg name=\"y\"></arg></mutation><title name=\"NAME\">setSomething</title><statement name=\"STACK\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global Z</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">y</title></block></value></block></value></block></statement></block></xml>"},

"quiz_function_square" :{"Name":"quiz_function_square","DisplayName":"Function Square","Decription":"Simple Function Definition","QuestionHTML":"Define a function f(x) that squares its single argument. ","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["You'll need the procedures-with-return block in the Procedures drawer. ","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","logic_boolean","logic_compare","logic_false","logic_negate","logic_operation","logic_or","text_compare","text_contains","text_isEmpty","text_join","text_join_item","text_length","text_replace_all","text_segment","text_split","text_split_at_spaces","text_trim","wrapSentence","text_compare","text_contains","text_isEmpty","text_join","text_join_item","text_length","text_replace_all","text_segment","text_split","text_split_at_spaces","text_trim","wrapSentence","controls_do_then_return","controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","controls_forRange","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"f","FunctionDef":"function f(x) {\n  return x * x;\n}","FunctionInputs":["0","1","2","10"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"147\" y=\"31\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">f</title><value name=\"RETURN\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value></block></value></block></xml>"},

"quiz_g_with_local" :{"Name":"quiz_g_with_local","DisplayName":"G with Local","Decription":"Describe the quiz problem.","QuestionHTML":"Define g(x) that returns 0.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_mutator_item","mutator_container","math_number","math_on_list","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","logic_boolean","logic_compare","logic_false","logic_negate","logic_operation","logic_or","text_compare","text_contains","text_isEmpty","text_join","text_join_item","text_length","text_replace_all","text_segment","text_split","text_split_at_spaces","text_trim","wrapSentence","text_compare","text_contains","text_isEmpty","text_join","text_join_item","text_length","text_replace_all","text_segment","text_split","text_split_at_spaces","text_trim","wrapSentence","controls_do_then_return", "controls_if","controls_if_else","controls_if_elseif","controls_if_if","controls_while","controls_forEach","controls_forRange","global_declaration","lexical_variable_get","lexical_variable_set","local_declaration_expression","local_declaration_statement","local_mutatorarg","local_mutatorcontainer","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"g","FunctionDef":"function g(x) {\n var Y = 0;\n return (Y);\n}","FunctionInputs":["0","1","10"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"216\" y=\"21\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">g</title><value name=\"RETURN\"><block type=\"local_declaration_expression\" inline=\"false\"><mutation><localname name=\"name\"></localname></mutation><title name=\"VAR0\">Y</title><value name=\"DECL0\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value><value name=\"RETURN\"><block type=\"lexical_variable_get\"><title name=\"VAR\">Y</title></block></value></block></value></block></xml>"},

"quiz_random_number" :{"Name":"quiz_random_number","DisplayName":"Random Number","Decription":"Uses the random function.","QuestionHTML":"Assign a random number between -91.9 and -92.9 to the global variable $#STR1#$.  ","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Use the <font color=\"red\">random_integer_from_to</font> block in the Math drawer."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_is_a_number","math_multiply","math_number","math_power","math_random_float","math_random_int","math_random_set_seed","math_round","math_single","math_subtract","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{"1":"-10","2":"160","STR1":"B"},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{"1":"-10...10","2":"100...200","STR1":["A","B","C","X","Y","Z"]},"Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"95\" y=\"-7\"><title name=\"NAME\">$#STR1#$</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"95\" y=\"-7\"><title name=\"NAME\">$#STR1#$</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"94\" y=\"39\"><title name=\"VAR\">global $#STR1#$</title><value name=\"VALUE\"><block type=\"math_random_int\" inline=\"true\"><value name=\"FROM\"><block type=\"math_number\"><title name=\"NUM\">-91.9</title></block></value><value name=\"TO\"><block type=\"math_number\"><title name=\"NUM\">-92.9</title></block></value></block></value></block></xml>"},

"quiz_is_odd" :{"Name":"quiz_is_odd","DisplayName":"Is Odd","Decription":"A function definition problem.","QuestionHTML":"Write a function <font color=\"red\">isOdd(x)</font> that returns true if its argument is an odd number. Do not use if/else.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"isOdd","FunctionDef":"function isOdd(x) {\n  return x % 2 != 0;\n}","FunctionInputs":["0","1","2","3","4","5","6","7","8","9","-1","-2"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"85\" y=\"43\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">isOdd</title><value name=\"RETURN\"><block type=\"math_compare\" inline=\"true\"><title name=\"OP\">NEQ</title><value name=\"A\"><block type=\"math_divide\" inline=\"true\"><title name=\"OP\">REMAINDER</title><value name=\"DIVIDEND\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"DIVISOR\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></value></block></xml>"},

"quiz_g_function" :{"Name":"quiz_g_function","DisplayName":"G Function","Decription":"Describe the quiz problem.","QuestionHTML":"Write g with 1 argument that returns 0.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"g","FunctionDef":"function g(x) {\n  return 0;\n}","FunctionInputs":["3","4","5","0"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"133\" y=\"43\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">g</title><value name=\"RETURN\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>"},

"quiz_simple_problem" :{"Name":"quiz_simple_problem","DisplayName":"Simple Problem","Decription":"Describe the quiz problem.","QuestionHTML":"WRite a function with two arguments that returns the sum.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"f","FunctionDef":"function f(x, x2) {\n  return x + x2;\n}","FunctionInputs":["3,4","1,2","0,0"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"110\" y=\"8\"><mutation><arg name=\"x\"></arg><arg name=\"x2\"></arg></mutation><title name=\"NAME\">f</title><value name=\"RETURN\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x2</title></block></value></block></value></block></xml>"},

"quiz_pounds_to_kilograms" :{"Name":"quiz_pounds_to_kilograms","DisplayName":"Pounds to Kilograms","Decription":"Describe the quiz problem.","QuestionHTML":"Write a function <font color=\"red\">lbsToKg</font> that converts pounds to kg.  I kg = 2.2 pounds.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"lbsToKg","FunctionDef":"function lbsToKg(x) {\n  return x / 2.2;\n}","FunctionInputs":["1","2.2","0"],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"></xml>","Xmlsolution":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"procedures_defreturn\" inline=\"false\" x=\"81\" y=\"4\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">lbsToKg</title><value name=\"RETURN\"><block type=\"math_division\" inline=\"true\"><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2.2</title></block></value></block></value></block></xml>"},

"quiz_eval_arithmetic" :{"Name":"quiz_eval_arithmetic","DisplayName":"Eval Arithmetic","Decription":"Describe the quiz problem.","QuestionHTML":"Evaluate the expression.","AnswerHTML":"","AnswerType":"eval_expr","AnswerVisibility":"visible","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"function xmlGenerator(xml,low, high, op){var ops = ['ADD', 'MINUS', 'MULTIPLY', 'DIVIDE', 'POWER'];var name1=''; var name2=''; var type = '';if (!op){op = ops[Math.floor(Math.random() * ops.length)];if (op == 'ADD'){name1='NUM0'; name2='NUM1'; type = 'math_add';}else if (op == 'MINUS'){name1='A';name2='B';type = 'math_subtract';} else if (op == 'MULTIPLY'){name1='NUM0';name2='NUM1';type = 'math_multiply'; } else if (op == 'DIVIDE') {name1='A';name2='B';type = 'math_division';} else {type = 'math_power';name1='A';name2='B';}}var n1 = Math.floor(Math.random() * 10);var n2 = Math.floor(Math.random() * 10);if (low && high) {n1 = low + Math.floor(Math.random() * (high - low + 1));n2 = low + Math.floor(Math.random() * (high - low + 1));}if (op == 'DIVIDE' && n2 == 0) {n2 = 1;}if (op == 'DIVIDE') {var factor = Math.floor(Math.random() * 5);n1 = n2 * factor;}if (op == 'POWER' && n2 > 3) {n2 = 3;}xml = xml.replace('$type', type);xml = xml.replace('$arg1', n1);xml = xml.replace('$arg2', n2);xml=xml.replace('$name1',name1);xml=xml.replace('$name2',name2);return xml; }","Xmltemplate":"<xml><block type=\"$type\" inline=\"true\" x=\"85\" y=\"100\"><value name=\"$name1\"><block type=\"math_number\"><title name=\"NUM\">$arg1</title></block></value><value name=\"$name2\"><block type=\"math_number\"><title name=\"NUM\">$arg2</title></block></value></block></xml>","Xmlsolution":""},

"quiz_eval_relations" :{"Name":"quiz_eval_relations","DisplayName":"Eval Relations","Decription":"Describe the quiz problem.","QuestionHTML":"Evaluate the expression.","AnswerHTML":"","AnswerType":"eval_expr","AnswerVisibility":"visible","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":"undefined","Xmlgenerator":"function xmlGenerator(xml, low, high, op) {var ops = ['EQ', 'NEQ', 'LT', 'LTE', 'GT', 'GTE'];   if (!op) { op = ops[Math.floor(Math.random() * ops.length)]; } var n1 = Math.floor(Math.random() * 10); var n2 = Math.floor(Math.random() * 10); if (low && high) { n1 = low + Math.floor(Math.random() * (high - low + 1)); n2 = low + Math.floor(Math.random() * (high - low + 1)); } xml = xml.replace('$OP', op); xml = xml.replace('$N1', n1); xml = xml.replace('$N2', n2); return xml; }","Xmltemplate":"<xml><block type=\"math_compare\"><title name=\"OP\" >$OP</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">$N1</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">$N2</title></block></value></block></xml>","Xmlsolution":""},

"quiz_dumb_problem" :{"Name":"quiz_dumb_problem","DisplayName":"Dumb Problem","Decription":"Describe the quiz problem.","QuestionHTML":"Add -91.9 to global $#STR1#$.","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{"1":"6","STR1":"X"},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{"1":"1...20","STR1":["A","B","C","X","Y","Z"]},"Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"95\" y=\"-18\"><title name=\"NAME\">$#STR1#$</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"95\" y=\"-18\"><title name=\"NAME\">$#STR1#$</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"97\" y=\"24\"><title name=\"VAR\">global $#STR1#$</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global $#STR1#$</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">-91.9</title></block></value></block></value></block></xml>"},

"quiz_test_problem" :{"Name":"quiz_test_problem","DisplayName":"Test Problem","Decription":"Describe the quiz problem.","QuestionHTML":"Define a function f that returns 0","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"f","FunctionDef":"function f() {\n  return 0;\n}","FunctionInputs":[""],"XmlDictionary":"undefined","Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"114\" y=\"69\"><mutation></mutation><title name=\"NAME\">f</title><value name=\"RETURN\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>"},

"quiz_sqrt_of_average" :{"Name":"quiz_sqrt_of_average","DisplayName":"Sqrt of Average","Decription":"Describe the quiz problem.","QuestionHTML":"Define a function named sqrtOfAverage that takes the square of the average of its 2 arguments.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"sqrtOfAverage","FunctionDef":"function sqrtOfAverage(x, y) {\n  return Math.sqrt((x + y) / 2);\n}","FunctionInputs":["0,10","10,20","0,0","12345,98765"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"149\" y=\"36\"><mutation><arg name=\"x\"></arg><arg name=\"y\"></arg></mutation><title name=\"NAME\">sqrtOfAverage</title><value name=\"RETURN\"><block type=\"math_single\" inline=\"false\"><title name=\"OP\">ROOT</title><value name=\"NUM\"><block type=\"math_division\" inline=\"true\"><value name=\"A\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">y</title></block></value></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></value></block></xml>"},

"quiz_cups_to_tablespoons" :{"Name":"quiz_cups_to_tablespoons","DisplayName":"Cups to Tablespoons","Decription":"Describe the quiz problem.","QuestionHTML":"Write a function cupsToTablespoons that converts cups to tbsp using 1 cup = 16 tbsps.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"cupsToTablespoons","FunctionDef":"function cupsToTablespoons(x) {\n  return x * 16;\n}","FunctionInputs":["0","1","2","4"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"144\" y=\"48\"><mutation><arg name=\"x\"></arg></mutation><title name=\"NAME\">cupsToTablespoons</title><value name=\"RETURN\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">16</title></block></value></block></value></block></xml>"},

"quiz_is_divisible_by" :{"Name":"quiz_is_divisible_by","DisplayName":"Is Divisible By","Decription":"Describe the quiz problem.","QuestionHTML":"Define a function 'isDivisibleBy' that returns true if its first argument is evenly divisible by its second argument. Otherwise it returns false.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"isDivisibleBy","FunctionDef":"function isDivisibleBy(x, y) {\n  return x % y == 0;\n}","FunctionInputs":["4,2"," 4,1"," 4,3"," 15,2"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"153\" y=\"35\"><mutation><arg name=\"x\"></arg><arg name=\"y\"></arg></mutation><title name=\"NAME\">isDivisibleBy</title><value name=\"RETURN\"><block type=\"math_compare\" inline=\"true\"><title name=\"OP\">EQ</title><value name=\"A\"><block type=\"math_divide\" inline=\"true\"><title name=\"OP\">REMAINDER</title><value name=\"DIVIDEND\"><block type=\"lexical_variable_get\"><title name=\"VAR\">x</title></block></value><value name=\"DIVISOR\"><block type=\"lexical_variable_get\"><title name=\"VAR\">y</title></block></value></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></value></block></xml>"},

"quiz_variable_assignment" :{"Name":"quiz_variable_assignment","DisplayName":"Variable Assignment","Decription":"Double the value of a variable.","QuestionHTML":"Use setter and getter blocks to double the value of global $#STR1#$, whose initial value is -91.9.","AnswerHTML":"","AnswerType":"xml_blocks","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration"],"Components":[],"VariableMappings":{"1":"77","STR1":"A"},"FunctionName":"","FunctionDef":"undefined","FunctionInputs":"undefined","XmlDictionary":{"1":"-10...100","STR1":["A","B","C"]},"Xmlgenerator":"undefined","Xmltemplate":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"161\" y=\"23\"><title name=\"NAME\">$#STR1#$</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">-91.9</title></block></value></block></xml>","Xmlsolution":"<xml><block type=\"global_declaration\" inline=\"false\" x=\"161\" y=\"23\"><title name=\"NAME\">$#STR1#$</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">-91.9</title></block></value></block><block type=\"lexical_variable_set\" inline=\"false\" x=\"153\" y=\"77\"><title name=\"VAR\">global $#STR1#$</title><value name=\"VALUE\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global $#STR1#$</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">2</title></block></value></block></value></block></xml>"},

"quiz_height_in_inches" :{"Name":"quiz_height_in_inches","DisplayName":"Height in Inches","Decription":"A function definition problem.","QuestionHTML":"Define a function, 'heightInInches', that takes height in feet and inches and converts it to inches.  For example, 6 feet 2 inches is 74 inches.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["For this problem you'll need a procedure-with-return block in the Procedures drawer.","Your function must have 2 arguments -- they're names do not matter but the first parameter must represent the number of feet.","Pseudocode: heightInInches(ft, inches) = ft * 12 + inches."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"heightInInches","FunctionDef":"function heightInInches(ft, inch) {\n  return ft * 12 + inch;\n}","FunctionInputs":["6,2"," 5,10"," 5,4"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"124\" y=\"58\"><mutation><arg name=\"ft\"></arg><arg name=\"inch\"></arg></mutation><title name=\"NAME\">heightInInches</title><value name=\"RETURN\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">ft</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">12</title></block></value></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">inch</title></block></value></block></value></block></xml>"},

"quiz_hypotenuse" :{"Name":"quiz_hypotenuse","DisplayName":"Hypotenuse","Decription":"Function Definition.","QuestionHTML":"Define a function named 'hypotenuse' that calculates the length of the hypotenuse of a right triangle given the lengths of its other two sides.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","math_single","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"hypotenuse","FunctionDef":"function hypotenuse(a, b) {\n  return Math.sqrt(a * a + b * b);\n}","FunctionInputs":["3,4"," 5,12"," 6,7"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"117\" y=\"49\"><mutation><arg name=\"a\"></arg><arg name=\"b\"></arg></mutation><title name=\"NAME\">hypotenuse</title><value name=\"RETURN\"><block type=\"math_single\" inline=\"false\"><title name=\"OP\">ROOT</title><value name=\"NUM\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">a</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">a</title></block></value></block></value><value name=\"NUM1\"><block type=\"math_multiply\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">b</title></block></value><value name=\"NUM1\"><block type=\"lexical_variable_get\"><title name=\"VAR\">b</title></block></value></block></value></block></value></block></value></block></xml>"},

"quiz_quarts_to_gallons" :{"Name":"quiz_quarts_to_gallons","DisplayName":"Quarts to Gallons","Decription":"Describe the quiz problem.","QuestionHTML":"Define a function 'quartsToGallons', with one parameter representing amount in quarts, that returns the amount in gallons, where 1 gal. = 4 qts.","AnswerHTML":"","AnswerType":"func_def","AnswerVisibility":"hidden","ResultHTML":"","Hints":["Hint #1.","Hint #2.","Hint #3."],"BuiltIns":["math_add","math_compare","math_divide","math_division","math_number","math_multiply","math_power","math_subtract","lexical_variable_get","lexical_variable_set","global_declaration","procedures_callnoreturn","procedures_callreturn","procedures_defnoreturn","procedures_defreturn","procedures_mutatorarg","procedures_mutatorcontainer","removeProcedureValues","getProcedureNames"],"Components":[],"VariableMappings":{},"FunctionName":"quartsToGallons","FunctionDef":"function quartsToGallons(q) {\n  return q / 4;\n}","FunctionInputs":["0","4","6","8"],"XmlDictionary":{},"Xmlgenerator":"undefined","Xmltemplate":"<xml></xml>","Xmlsolution":"<xml><block type=\"procedures_defreturn\" inline=\"false\" x=\"158\" y=\"34\"><mutation><arg name=\"q\"></arg></mutation><title name=\"NAME\">quartsToGallons</title><value name=\"RETURN\"><block type=\"math_division\" inline=\"true\"><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">q</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">4</title></block></value></block></value></block></xml>"},

 "quiz_relations" : {
  "Name" : "quiz_relations", 
  "DisplayName" : "Simple Numerical Relations", 
  "ProblemType" : "math_compare",
  "Description" : "Generate simple numerical relational operations on integers.",
  "QuestionHTML" : "Evaluate the expression shown in the work area.",
  "AnswerHTML" : "",
  "AnswerType" : "boolean",
  "AnswerVisibility" : "visible",
  "ResultHTML" : "",
  "Hints" : ["This is hint #1", "This is hint #2", "This is hint #3"],
  "BuiltIns" : ["math_number", "math_compare", "math_add", "math_subtract", "math_division", "math_multiply", "math_power"],
  "Components" : [],
  "XmlDictionary":{},
  "Xmlgenerator" : "function xmlGenerator(xml, low, high, op) {var ops = ['EQ', 'NEQ', 'LT', 'LTE', 'GT', 'GTE'];   if (!op) { op = ops[Math.floor(Math.random() * ops.length)]; } var n1 = Math.floor(Math.random() * 10); var n2 = Math.floor(Math.random() * 10); if (low && high) { n1 = low + Math.floor(Math.random() * (high - low + 1)); n2 = low + Math.floor(Math.random() * (high - low + 1)); } xml = xml.replace('$OP', op); xml = xml.replace('$N1', n1); xml = xml.replace('$N2', n2); return xml; }",
  "Xmltemplate" : "<xml><block type=\"math_compare\" inline=\"true\" x=\"85\" y=\"100\"><title name=\"OP\" >$OP</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">$N1</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">$N2</title></block></value></block></xml>",
  "Xmlsolution" : ""
 },

 "quiz_increment_variable" :   {
  "Name" : "quiz_increment_variable", 
  "DisplayName" : "Variable Increment", 
  "ProblemType" : "variable_increment",
  "Description" : "Ask the user to code a variable increment operation when a Button is clicked.",
  "QuestionHTML" : "Complete the block so that it adds 1 to the variable 'X' when Button1 is clicked.",
  "AnswerHTML" : "",
  "AnswerType" : "xml_blocks",
  "AnswerVisibility" : "hidden",
  "ResultHTML" : "",
  "Hints" : ["Blocks for setting and getting variable values are in the 'Variables' drawer.", "You'll need to do an addition operation.", "Pseudocode: Set X to (get X) + 1"],
  "BuiltIns" : ["math_number", "math_compare", "math_add", "math_subtract", "math_division", "math_multiply", "math_power",
	       "global_declaration", "lexical_variable_get", "lexical_variable_set"],
  "Components" : ["Button"],
  "XmlDictionary":{},
  "Xmlgenerator" : "undefined",
  "Xmltemplate" : "<xml><block type=\"Button1_Click\" x=\"85\" y=\"100\"></block><block type=\"global_declaration\" inline=\"false\"  x=\"85\" y=\"50\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>",
  "Xmlsolution" : "<block type=\"Button1_Click\" x=\"291\" y=\"45\"><statement name=\"DO\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global X</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global X</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></value></block></statement></block>"
 },

 "quiz_ifelse" :   {
  "Name" : "quiz_ifelse", 
  "DisplayName" : "Simple If-Else", 
  "ProblemType" : "ifelse",
  "Description" : "As the user to code an if-else statement to increment or decrement a variable.",
  "QuestionHTML" : "Construct an if-else statement that adds 1 to the variable X if variable Y is greater than 0 and otherwise subtracts 1.",
  "AnswerHTML" : "",
  "AnswerType" : "xml_blocks",
  "AnswerVisibility" : "hidden",
  "ResultHTML" : "",
  "Hints" : ["The greater-than operator is in the Math drawer.", "Blocks for getting and setting variable values are in the 'Variables' drawer.", "The plus and minus operators are in the 'Math' drawer.", "Pseudocode: If (get Y) > 0 then do: Set X to (get X) + 1 else do: Set X to (get X) - 1"],
  "BuiltIns" : ["all"],
  "Components" : [],
  "XmlDictionary":{},
  "Xmlgenerator" : "undefined",
  "Xmltemplate" : "<xml><block type=\"controls_if\" inline=\"false\" x=\"85\" y=\"75\"><mutation else=\"1\"></mutation></block><block type=\"global_declaration\" inline=\"false\"  x=\"85\" y=\"0\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\"  x=\"85\" y=\"35\"><title name=\"NAME\">Y</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>",
   "Xmlsolution" : "<xml><block type=\"controls_if\" inline=\"false\" x=\"85\" y=\"75\"><mutation else=\"1\"></mutation><value name=\"IF0\"><block type=\"math_compare\" inline=\"true\"><title name=\"OP\">GT</title><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global Y</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></value><statement name=\"DO0\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global X</title><value name=\"VALUE\"><block type=\"math_add\" inline=\"true\"><mutation items=\"2\"></mutation><value name=\"NUM0\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global X</title></block></value><value name=\"NUM1\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></value></block></statement><statement name=\"ELSE\"><block type=\"lexical_variable_set\" inline=\"false\"><title name=\"VAR\">global X</title><value name=\"VALUE\"><block type=\"math_subtract\" inline=\"true\"><value name=\"A\"><block type=\"lexical_variable_get\"><title name=\"VAR\">global X</title></block></value><value name=\"B\"><block type=\"math_number\"><title name=\"NUM\">1</title></block></value></block></value></block></statement></block><block type=\"global_declaration\" inline=\"false\" x=\"85\" y=\"0\"><title name=\"NAME\">X</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block><block type=\"global_declaration\" inline=\"false\" x=\"85\" y=\"35\"><title name=\"NAME\">Y</title><value name=\"VALUE\"><block type=\"math_number\"><title name=\"NUM\">0</title></block></value></block></xml>"
  },

 "quiz_hello_purr" :   {
  "Name" : "quiz_hello_purr", 
  "DisplayName" : "Hello Purr", 
  "ProblemType" : "quiz_hello_purr",
  "Description" : "Use a Sound component to make the kitty purr.",
  "QuestionHTML" : "Complete the 'when Button1.Click' block so that the app will vibrate for 500 milliseconds when Button1 is clicked.",
  "AnswerHTML" : "",
  "AnswerType" : "xml_blocks",
  "AnswerVisibility" : "hidden",
  "ResultHTML" : "",
  "Hints" : ["Look for an appropriate block in the 'Sound' drawer.", "You'll want the 'Sound.Vibrate' block.", "Find a number in the 'Math' drawer."],
  "BuiltIns" : ["math_number"],
  "Components" : ["Button", "Sound"],
  "XmlDictionary":{},
  "Xmlgenerator" : "undefined",
  "Xmltemplate" : "<xml><block type=\"Button1_Click\" x=\"85\" y=\"75\"><statement name=\"DO\"><block type=\"Sound1_Play\"></block></statement></block></xml>",
  "Xmlsolution" : "<xml><block type=\"Button1_Click\" x=\"85\" y=\"75\"><statement name=\"DO\"><block type=\"Sound1_Play\"><next><block type=\"Sound1_Vibrate\" inline=\"false\"><value name=\"ARG0\"><block type=\"math_number\"><title name=\"NUM\">500</title></block></value></block></next></block></statement></block></xml>"
  },

"quiz_arithmetic" :   {
  "Name" : "quiz_arithmetic", 
  "DisplayName" : "Arithmetic Operations", 
  "ProblemType" : "quiz_arithmetic",
  "Description" : "Description goes here.",
  "QuestionHTML" : "Evaluate the arithmetic expression shown in the workspace and type your answer in the answer box.",
  "AnswerType" : "boolean",
  "AnswerVisibility" : "visible",
  "ResultHTML" : "",
  "Hints" : ["This is hint #1", "This is hint #2", "This is hint #3"],
  "BuiltIns" : ["math_number", "math_compare", "math_add", "math_subtract", "math_division", "math_multiply", "math_power"],
  "Components" : [],
  "XmlDictionary":{},
  "Xmlgenerator" : "function xmlGenerator(xml,low, high, op){var ops = ['ADD', 'MINUS', 'MULTIPLY', 'DIVIDE', 'POWER'];var name1=''; var name2=''; var type = '';if (!op){op = ops[Math.floor(Math.random() * ops.length)];if (op == 'ADD'){name1='NUM0'; name2='NUM1'; type = 'math_add';}else if (op == 'MINUS'){name1='A';name2='B';type = 'math_subtract';} else if (op == 'MULTIPLY'){name1='NUM0';name2='NUM1';type = 'math_multiply'; } else if (op == 'DIVIDE') {name1='A';name2='B';type = 'math_division';} else {type = 'math_power';name1='A';name2='B';}}var n1 = Math.floor(Math.random() * 10);var n2 = Math.floor(Math.random() * 10);if (low && high) {n1 = low + Math.floor(Math.random() * (high - low + 1));n2 = low + Math.floor(Math.random() * (high - low + 1));}if (op == 'DIVIDE' && n2 == 0) {n2 = 1;}if (op == 'DIVIDE') {var factor = Math.floor(Math.random() * 5);n1 = n2 * factor;}if (op == 'POWER' && n2 > 3) {n2 = 3;}xml = xml.replace('$type', type);xml = xml.replace('$arg1', n1);xml = xml.replace('$arg2', n2);xml=xml.replace('$name1',name1);xml=xml.replace('$name2',name2);return xml; }",
  "Xmltemplate" : "<xml><block type=\"$type\" inline=\"true\" x=\"85\" y=\"100\"><value name=\"$name1\"><block type=\"math_number\"><title name=\"NUM\">$arg1</title></block></value><value name=\"$name2\"><block type=\"math_number\"><title name=\"NUM\">$arg2</title></block></value></block></xml>",
  "Xmlsolution" : ""
 },
 
 "quiz_relations_fillin" :   {
  "Name" : "quiz_relations_fillin", 
  "DisplayName" : "Complete the Relation", 
  "ProblemType" : "math_compare",
  "Description" : "Description goes here.",
  "QuestionHTML" : "Complete the relational expression block such that the resulting expression is true.",
  "AnswerHTML" : "",
  "AnswerType" : "eval_blocks",
  "AnswerVisibility" : "hidden",
  "ResultHTML" : "",
  "Hints" : ["This is hint #1", "This is hint #2", "This is hint #3"],
  "BuiltIns" : ["math_number", "math_compare", "math_add", "math_subtract", "math_division", "math_multiply", "math_power"],
  "Components" : [],
  "XmlDictionary":{},
  "Xmlgenerator" : "function xmlGenerator(xml,low, high, op){var ops = ['EQ', 'NEQ', 'LT', 'LTE', 'GT', 'GTE'];if (!op) {op = ops[Math.floor(Math.random() * ops.length)];}var n1 = Math.floor(Math.random() * 10);var n2 = Math.floor(Math.random() * 10);if (low && high) {n1 = low + Math.floor(Math.random() * (high - low + 1));n2 = low + Math.floor(Math.random() * (high - low + 1));}xml = xml.replace('$OP', op);xml = xml.replace('$arg1', n1);xml = xml.replace('$arg2', n2);return xml;}",
  "Xmltemplate" : "<xml><block type=\"math_compare\" inline=\"true\" x=\"85\" y=\"100\"><title name=\"OP\">$OP</title><value name=\"A\"><block type=\"math_number\"><title name=\"NUM\">$arg1</title></block></value></block><block type=\"math_number\" x=\"125\" y=\"150\"><title name=\"NUM\">$arg2</title></block></xml>",
  "Xmlsolution" : ""
 }

}
  

